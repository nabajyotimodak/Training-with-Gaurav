root@vagrant:~# docker images
REPOSITORY   TAG       IMAGE ID       CREATED         SIZE
nginx        latest    a99a39d070bf   2 weeks ago     142MB
centos       latest    5d0da3dc9764   16 months ago   231MB
root@vagrant:~# docker run -it --name=centos-con1 centos
[root@524f9f588917 /]# root@vagrant:~#
root@vagrant:~# docker rm centos-con1
Error response from daemon: You cannot remove a running container 524f9f5889171b34e939d22b92057a9f8ebb7c002df8df518f39ce057d6483b1. Stop the container before attempting removal or force remove
root@vagrant:~# docker rm centos-con1 -f
centos-con1
root@vagrant:~#
root@vagrant:~#
root@vagrant:~# docker network create --subnet 192.168.1.0/24 --driver bridge web-frontend
e91f0a28737af7318041a86135be0d0f987ca67e8761b39b500d03c777e069d6
root@vagrant:~#
root@vagrant:~# docker network ls
NETWORK ID     NAME           DRIVER    SCOPE
b21e68d06ae8   bridge         bridge    local
32d620752415   host           host      local
6de702cc493d   none           null      local
e91f0a28737a   web-frontend   bridge    local
root@vagrant:~#
root@vagrant:~# docker run -d --name=centos --network web-frontend centos
835ebaaa0e92c8e169859f9c01a50c8308ce642fdd083ffc209e1fbefaa89d75
root@vagrant:~# docker run -d --name=centos2 --network web-frontend centos
51d5e32c17496888997c41d7471dae22699c7d481a3dbeed97330836a5019faa
root@vagrant:~# docker exec -it centos bash
Error response from daemon: Container 835ebaaa0e92c8e169859f9c01a50c8308ce642fdd083ffc209e1fbefaa89d75 is not running
root@vagrant:~#
root@vagrant:~# docker ps -a
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS                      PORTS                                     NAMES
51d5e32c1749   centos    "/bin/bash"              29 seconds ago   Exited (0) 28 seconds ago                                             centos2
835ebaaa0e92   centos    "/bin/bash"              59 seconds ago   Exited (0) 58 seconds ago                                             centos
66388ef40753   nginx     "/docker-entrypoint.…"   2 hours ago      Up 2 hours                  0.0.0.0:32769->80/tcp, :::32769->80/tcp   nginx-con2
root@vagrant:~# docker rm -f $(docker ps -a -q)
51d5e32c1749
835ebaaa0e92
66388ef40753
root@vagrant:~#
root@vagrant:~#
root@vagrant:~# docker run -it --name=centos --network web-frontend centos
[root@fc0c5ad84505 /]# root@vagrant:~# docker run -it --name=centos2 --network web-frontend centos
[root@6bfedab5681d /]# ping centos
PING centos (192.168.1.2) 56(84) bytes of data.
64 bytes from centos.web-frontend (192.168.1.2): icmp_seq=1 ttl=64 time=0.531 ms
64 bytes from centos.web-frontend (192.168.1.2): icmp_seq=2 ttl=64 time=0.085 ms
64 bytes from centos.web-frontend (192.168.1.2): icmp_seq=3 ttl=64 time=0.086 ms
64 bytes from centos.web-frontend (192.168.1.2): icmp_seq=4 ttl=64 time=0.090 ms
^C
--- centos ping statistics ---
4 packets transmitted, 4 received, 0% packet loss, time 3037ms
rtt min/avg/max/mdev = 0.085/0.198/0.531/0.192 ms
[root@6bfedab5681d /]# root@vagrant:~#
root@vagrant:~#
root@vagrant:~# docker container ls
CONTAINER ID   IMAGE     COMMAND       CREATED             STATUS             PORTS     NAMES
6bfedab5681d   centos    "/bin/bash"   About an hour ago   Up About an hour             centos2
fc0c5ad84505   centos    "/bin/bash"   About an hour ago   Up About an hour             centos
root@vagrant:~#
root@vagrant:~# docker attach centos
[root@fc0c5ad84505 /]# ping -c 5 centos2
PING centos2 (192.168.1.3) 56(84) bytes of data.
64 bytes from centos2.web-frontend (192.168.1.3): icmp_seq=1 ttl=64 time=0.355 ms
64 bytes from centos2.web-frontend (192.168.1.3): icmp_seq=2 ttl=64 time=0.096 ms
64 bytes from centos2.web-frontend (192.168.1.3): icmp_seq=3 ttl=64 time=0.091 ms
64 bytes from centos2.web-frontend (192.168.1.3): icmp_seq=4 ttl=64 time=0.093 ms
64 bytes from centos2.web-frontend (192.168.1.3): icmp_seq=5 ttl=64 time=0.085 ms

--- centos2 ping statistics ---
5 packets transmitted, 5 received, 0% packet loss, time 4056ms
rtt min/avg/max/mdev = 0.085/0.144/0.355/0.105 ms
[root@fc0c5ad84505 /]# ping -c 5 google.com
PING google.com (142.250.77.110) 56(84) bytes of data.
64 bytes from maa05s15-in-f14.1e100.net (142.250.77.110): icmp_seq=1 ttl=55 time=235 ms
64 bytes from maa05s15-in-f14.1e100.net (142.250.77.110): icmp_seq=2 ttl=55 time=9.79 ms
64 bytes from maa05s15-in-f14.1e100.net (142.250.77.110): icmp_seq=3 ttl=55 time=10.5 ms
64 bytes from maa05s15-in-f14.1e100.net (142.250.77.110): icmp_seq=4 ttl=55 time=9.49 ms
64 bytes from maa05s15-in-f14.1e100.net (142.250.77.110): icmp_seq=5 ttl=55 time=9.86 ms

--- google.com ping statistics ---
5 packets transmitted, 5 received, 0% packet loss, time 4009ms
rtt min/avg/max/mdev = 9.492/54.961/235.140/90.090 ms
[root@fc0c5ad84505 /]# read escape sequence
root@vagrant:~# cat /etc/resolv.conf
# This file is managed by man:systemd-resolved(8). Do not edit.
#
# This is a dynamic resolv.conf file for connecting local clients to the
# internal DNS stub resolver of systemd-resolved. This file lists all
# configured search domains.
#
# Run "systemd-resolve --status" to see details about the uplink DNS servers
# currently in use.
#
# Third party programs must not access this file directly, but only through the
# symlink at /etc/resolv.conf. To manage man:resolv.conf(5) in a different way,
# replace this symlink by a static file or a different symlink.
#
# See man:systemd-resolved.service(8) for details about the supported modes of
# operation for /etc/resolv.conf.

nameserver 127.0.0.53
options edns0
root@vagrant:~# docker attach centos2
[root@6bfedab5681d /]# cat /etc/resolv.conf
nameserver 127.0.0.11
options edns0 ndots:0
[root@6bfedab5681d /]# read escape sequence
root@vagrant:~#
root@vagrant:~# docker attach centos2
[root@6bfedab5681d /]# cat /etc/hosts
127.0.0.1       localhost
::1     localhost ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
192.168.1.3     6bfedab5681d
[root@6bfedab5681d /]# read escape sequence
root@vagrant:~#
root@vagrant:~#
root@vagrant:~# docker ps -a
CONTAINER ID   IMAGE     COMMAND       CREATED       STATUS       PORTS     NAMES
6bfedab5681d   centos    "/bin/bash"   2 hours ago   Up 2 hours             centos2
fc0c5ad84505   centos    "/bin/bash"   2 hours ago   Up 2 hours             centos
root@vagrant:~# docker network ls
NETWORK ID     NAME           DRIVER    SCOPE
b21e68d06ae8   bridge         bridge    local
32d620752415   host           host      local
6de702cc493d   none           null      local
e91f0a28737a   web-frontend   bridge    local
root@vagrant:~# docker run -it --name=centos3-bridge-con centos
[root@d4ce84aa5421 /]# cat /etc/resolv.conf
# This file is managed by man:systemd-resolved(8). Do not edit.
#
# This is a dynamic resolv.conf file for connecting local clients directly to
# all known uplink DNS servers. This file lists all configured search domains.
#
# Third party programs must not access this file directly, but only through the
# symlink at /etc/resolv.conf. To manage man:resolv.conf(5) in a different way,
# replace this symlink by a static file or a different symlink.
#
# See man:systemd-resolved.service(8) for details about the supported modes of
# operation for /etc/resolv.conf.

nameserver 10.0.2.3
[root@d4ce84aa5421 /]# cat /etc/hosts
127.0.0.1       localhost
::1     localhost ip6-localhost ip6-loopback
fe00::0 ip6-localnet
ff00::0 ip6-mcastprefix
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
172.17.0.2      d4ce84aa5421
[root@d4ce84aa5421 /]# root@vagrant:~#
root@vagrant:~# docker container inspect centos | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "",
                    "IPAddress": "192.168.1.2",
root@vagrant:~# docker container inspect centos2 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "",
                    "IPAddress": "192.168.1.3",
root@vagrant:~# docker container inspect centos3-bridge-con | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "172.17.0.2",
                    "IPAddress": "172.17.0.2",
root@vagrant:~# docker rm -f $(docker ps -a -q)
d4ce84aa5421
6bfedab5681d
fc0c5ad84505
root@vagrant:~# docker network ls
NETWORK ID     NAME           DRIVER    SCOPE
b21e68d06ae8   bridge         bridge    local
32d620752415   host           host      local
6de702cc493d   none           null      local
e91f0a28737a   web-frontend   bridge    local
root@vagrant:~# docker network rm web-frontend
web-frontend
root@vagrant:~# systemctl is-active docker
active
root@vagrant:~#
root@vagrant:~# docker network ls
NETWORK ID     NAME      DRIVER    SCOPE
b21e68d06ae8   bridge    bridge    local
32d620752415   host      host      local
6de702cc493d   none      null      local
root@vagrant:~#
root@vagrant:~# docker run -d --name=nginx-host-network-con1 --network host nginx
5c0ad57e3d44117266af7aa262ef028bd3bf30f4ca08c826a3014573089b8742
root@vagrant:~#
root@vagrant:~# netstat -tunlp | grep -w 80
tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      27939/nginx: master
tcp6       0      0 :::80                   :::*                    LISTEN      27939/nginx: master
root@vagrant:~#
root@vagrant:~# docker run -d --name=nginx-host-network-con2 --network host nginx
1eb96a6281376857bfa5d16246a29425dfce1b565a4068747aa5755be252b778
root@vagrant:~# docker ps -a
CONTAINER ID   IMAGE     COMMAND                  CREATED         STATUS                    PORTS     NAMES
1eb96a628137   nginx     "/docker-entrypoint.…"   4 seconds ago   Exited (1) 1 second ago             nginx-host-network-con2
5c0ad57e3d44   nginx     "/docker-entrypoint.…"   2 minutes ago   Up 2 minutes                        nginx-host-network-con1
root@vagrant:~# docker logs nginx-host-network-con2
/docker-entrypoint.sh: /docker-entrypoint.d/ is not empty, will attempt to perform configuration
/docker-entrypoint.sh: Looking for shell scripts in /docker-entrypoint.d/
/docker-entrypoint.sh: Launching /docker-entrypoint.d/10-listen-on-ipv6-by-default.sh
10-listen-on-ipv6-by-default.sh: info: Getting the checksum of /etc/nginx/conf.d/default.conf
10-listen-on-ipv6-by-default.sh: info: Enabled listen on IPv6 in /etc/nginx/conf.d/default.conf
/docker-entrypoint.sh: Launching /docker-entrypoint.d/20-envsubst-on-templates.sh
/docker-entrypoint.sh: Launching /docker-entrypoint.d/30-tune-worker-processes.sh
/docker-entrypoint.sh: Configuration complete; ready for start up
2023/01/27 09:07:52 [emerg] 1#1: bind() to 0.0.0.0:80 failed (98: Address already in use)
nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)
2023/01/27 09:07:52 [emerg] 1#1: bind() to [::]:80 failed (98: Address already in use)
nginx: [emerg] bind() to [::]:80 failed (98: Address already in use)
2023/01/27 09:07:52 [notice] 1#1: try again to bind() after 500ms
2023/01/27 09:07:52 [emerg] 1#1: bind() to 0.0.0.0:80 failed (98: Address already in use)
nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)
2023/01/27 09:07:52 [emerg] 1#1: bind() to [::]:80 failed (98: Address already in use)
nginx: [emerg] bind() to [::]:80 failed (98: Address already in use)
2023/01/27 09:07:52 [notice] 1#1: try again to bind() after 500ms
2023/01/27 09:07:52 [emerg] 1#1: bind() to 0.0.0.0:80 failed (98: Address already in use)
nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)
2023/01/27 09:07:52 [emerg] 1#1: bind() to [::]:80 failed (98: Address already in use)
nginx: [emerg] bind() to [::]:80 failed (98: Address already in use)
2023/01/27 09:07:52 [notice] 1#1: try again to bind() after 500ms
2023/01/27 09:07:52 [emerg] 1#1: bind() to 0.0.0.0:80 failed (98: Address already in use)
nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)
2023/01/27 09:07:52 [emerg] 1#1: bind() to [::]:80 failed (98: Address already in use)
nginx: [emerg] bind() to [::]:80 failed (98: Address already in use)
2023/01/27 09:07:52 [notice] 1#1: try again to bind() after 500ms
2023/01/27 09:07:52 [emerg] 1#1: bind() to 0.0.0.0:80 failed (98: Address already in use)
nginx: [emerg] bind() to 0.0.0.0:80 failed (98: Address already in use)
2023/01/27 09:07:52 [emerg] 1#1: bind() to [::]:80 failed (98: Address already in use)
nginx: [emerg] bind() to [::]:80 failed (98: Address already in use)
2023/01/27 09:07:52 [notice] 1#1: try again to bind() after 500ms
2023/01/27 09:07:52 [emerg] 1#1: still could not bind()
nginx: [emerg] still could not bind()
root@vagrant:~#
root@vagrant:~# docker container inspect nginx-host-network-con1 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "",
                    "IPAddress": "",
root@vagrant:~# docker container inspect nginx-host-network-con2 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "",
                    "IPAddress": "",
root@vagrant:~# docker ps -a
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS                      PORTS     NAMES
1eb96a628137   nginx     "/docker-entrypoint.…"   13 minutes ago   Exited (1) 13 minutes ago             nginx-host-network-con2
5c0ad57e3d44   nginx     "/docker-entrypoint.…"   16 minutes ago   Up 16 minutes                         nginx-host-network-con1
root@vagrant:~# docker run -d --name=nginx-none-network-con3 --network none nginx
2d0712559bfe461bd86b4dbc495d26d9b832fb0e2c39bf21d7eff89a0ac71e2a
root@vagrant:~#
root@vagrant:~# docker ps -a
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS                      PORTS     NAMES
2d0712559bfe   nginx     "/docker-entrypoint.…"   7 seconds ago    Up 6 seconds                          nginx-none-network-con3
1eb96a628137   nginx     "/docker-entrypoint.…"   14 minutes ago   Exited (1) 14 minutes ago             nginx-host-network-con2
5c0ad57e3d44   nginx     "/docker-entrypoint.…"   16 minutes ago   Up 16 minutes                         nginx-host-network-con1
root@vagrant:~#
root@vagrant:~# docker exec -it nginx-none-network-con3 bash
root@2d0712559bfe:/# ifconfig
bash: ifconfig: command not found
root@2d0712559bfe:/# ip a
bash: ip: command not found
root@2d0712559bfe:/# curl 127.0.0.1
<!DOCTYPE html>
<html>
<head>
<title>Welcome to nginx!</title>
<style>
html { color-scheme: light dark; }
body { width: 35em; margin: 0 auto;
font-family: Tahoma, Verdana, Arial, sans-serif; }
</style>
</head>
<body>
<h1>Welcome to nginx!</h1>
<p>If you see this page, the nginx web server is successfully installed and
working. Further configuration is required.</p>

<p>For online documentation and support please refer to
<a href="http://nginx.org/">nginx.org</a>.<br/>
Commercial support is available at
<a href="http://nginx.com/">nginx.com</a>.</p>

<p><em>Thank you for using nginx.</em></p>
</body>
</html>
root@2d0712559bfe:/# read escape sequence
root@vagrant:~#
root@vagrant:~# docker container inspect nginx-none-network-con3 | grep -i ipaddress
            "SecondaryIPAddresses": null,
            "IPAddress": "",
                    "IPAddress": "",
root@vagrant:~#